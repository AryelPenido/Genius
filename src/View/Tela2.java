/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import tpgenius.Jogo;
import java.util.ArrayList;
/**
 *
 * @author aryels
 */
public class Tela2 extends javax.swing.JFrame {
        Botão b = new Botão();
        Jogo j = new Jogo();
          private int s, cs;
          int nivel;
          int cont;
          ArrayList <String> jogados = new ArrayList<>();
    /**
     * Creates new form Tela2
     */
    public Tela2() {
        initComponents();
         t = new Timer(10, acciones);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cronometro2 = new javax.swing.JLabel();
        green = new javax.swing.JButton();
        red = new javax.swing.JButton();
        yellow = new javax.swing.JButton();
        blue = new javax.swing.JButton();
        iniciart2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cronometro2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        cronometro2.setText("00:00");

        green.setBackground(new java.awt.Color(22, 140, 21));
        green.setForeground(new java.awt.Color(22, 140, 21));
        green.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenActionPerformed(evt);
            }
        });

        red.setBackground(new java.awt.Color(96, 8, 8));
        red.setForeground(new java.awt.Color(96, 8, 8));
        red.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redActionPerformed(evt);
            }
        });

        yellow.setBackground(new java.awt.Color(156, 156, 27));
        yellow.setForeground(new java.awt.Color(156, 156, 27));
        yellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowActionPerformed(evt);
            }
        });

        blue.setBackground(new java.awt.Color(27, 27, 116));
        blue.setForeground(new java.awt.Color(27, 27, 116));
        blue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueActionPerformed(evt);
            }
        });

        iniciart2.setText("Iniciar");
        iniciart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciart2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(green, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(blue, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(red, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(yellow, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(iniciart2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(cronometro2)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cronometro2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(iniciart2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(green, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blue, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(red, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yellow, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
     private Timer t;
  
    private ActionListener acciones = new ActionListener(){

        @Override
        public void actionPerformed(ActionEvent ae) {
            ++cs; 
            if(cs==100){
                cs = 0;
                ++s;
            }
            actualizarLabel();
            if(s == 5){
                t.stop();
                JOptionPane.showMessageDialog(rootPane, "Tempo Esgotado!!");
                cs = 0;
                s = 0;
                iniciart2.setEnabled(true);
            }
        }
        
    };
    
    private void actualizarLabel() {
        String tempo = (s<=9?"0":"")+s+":"+(cs<=9?"0":"")+cs;
        cronometro2.setText(tempo);
    }
    
    
    private void iniciart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciart2ActionPerformed
       // iniciart2.setEnabled(false);
       nivel = 1;
       j.Shuffle();
       MostraSequencia(nivel);
    }//GEN-LAST:event_iniciart2ActionPerformed

    private void blueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueActionPerformed
        b.setBclick();
        List or = j.getOrdem();
        jogados.add("b");
        Jogada(nivel,or,jogados);
    }//GEN-LAST:event_blueActionPerformed

    private void greenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenActionPerformed
        b.setGclick();
        List or = j.getOrdem();
        jogados.add("g");
        Jogada(nivel,or,jogados);// TODO add your handling code here:
    }//GEN-LAST:event_greenActionPerformed

    private void redActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redActionPerformed
        b.setRclick();   
        List or = j.getOrdem();
        jogados.add("r");
        Jogada(nivel,or,jogados);// TODO add your handling code here:
    }//GEN-LAST:event_redActionPerformed

    private void yellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowActionPerformed
        b.Yclick();  
        List or = j.getOrdem();
        jogados.add("y");
        Jogada(nivel,or,jogados);// TODO add your handling code here:
    }//GEN-LAST:event_yellowActionPerformed

      
    public void AcendeVermelho(){
        java.util.Timer contV = new java.util.Timer();
        red.setBackground(new java.awt.Color(247,13,13));
        class PiscarVermelho extends TimerTask{
            @Override
            public void run(){
                red.setBackground(new java.awt.Color(96,8,8));
            }
        }
            contV.schedule(new PiscarVermelho(),1000);
    }
    
    public void AcendeVerde(){
        java.util.Timer contG = new java.util.Timer();
        green.setBackground(new java.awt.Color(8,243,6));
        System.out.println("Acendeu");
        class PiscarVerde extends TimerTask{
            @Override
            public void run(){
                System.out.println("Apagou");
                green.setBackground(new java.awt.Color(27,167,16));
            }
        }
            contG.schedule(new PiscarVerde(),1000);
    }
    
    
    public void AcendeAmarelo(){
        java.util.Timer contY = new java.util.Timer();
        yellow.setBackground(new java.awt.Color(246,246,2));
          System.out.println("Acendeu");
        class PiscarVerde extends TimerTask{
            @Override
            public void run(){
                System.out.println("Apagou");
                yellow.setBackground(new java.awt.Color(156,156,27));
            }
        }
        contY.schedule(new PiscarVerde(),1000);
    }
    
    public void AcendeAzul(){
        java.util.Timer contB = new java.util.Timer();
         blue.setBackground(new java.awt.Color(22,22,229));
           System.out.println("Acendeu");
        class PiscarAzul extends TimerTask{
            @Override
            public void run(){
                System.out.println("Apagou");
                 blue.setBackground(new java.awt.Color(27,27,116));
               
            }
        }
        contB.schedule(new PiscarAzul(),1000);
    }
   
    
    
    public void MostraSequencia(int nivel){ 
       List or = j.getOrdem();
       j.Imprime();
           j.zeraJogada();
           System.out.println("\nnivel: "+nivel);
           for(int i = 0; i< nivel; i++){
           if(or.get(i).equals("r")){
               AcendeVermelho();
            }
            if(or.get(i).equals("g")){
               AcendeVerde();
           }
           
            if(or.get(i).equals("b")){
               AcendeAzul();
           }
           
           if(or.get(i).equals("y")){
               AcendeAmarelo();
           }
       //     t.start();
           
       }   
       
       
        
    }
    
    public void Jogada(int nivel, List or,ArrayList sequencia){
         cont = 0;
         System.out.println("\nnivel:"+nivel);
         //Imprime(sequencia);
         if(sequencia.size() == nivel){
            for(int i =0; i<nivel; i++){
                System.out.println("entrou");
               if(or.get(i).equals("r")){
                    if(sequencia.get(i).equals("r")){
                       cont++;
                   }
                }
                else if(sequencia.get(i).equals("g")){
                    if(b.verde == true){
                        cont++;
                    }
                }
           
                else if(sequencia.get(i).equals("b")){
                    if(b.azul == true){
                        cont++;
                    }
                }
           
                else if(sequencia.get(i).equals("y")){
                    if(b.amarelo == true){
                        cont++;
                    }
                }
            }      
           if(cont < nivel){
              // System.out.println("errou");
               JOptionPane.showMessageDialog(rootPane, "Errou");
           }
           else{
                Limpa(sequencia,nivel);
                nivel++;
             //   t.stop();
                Imprime(sequencia);
                MostraSequencia(nivel);
              
           }
         }
         
           
             
     }
    
    public void Imprime(ArrayList sequencia){
        System.out.println("\nsequencia: ");
        for(int i = 0; i < sequencia.size(); i++){
            System.out.println(" "+sequencia.get(i));
        }
    }
    
    public void Limpa(ArrayList sequencia,int nivel){
        System.out.println("\nremoveu qunts:"+sequencia.size());
        for(int i = 0; i< nivel; i++ ){
            sequencia.remove(i);
        }
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blue;
    private javax.swing.JLabel cronometro2;
    private javax.swing.JButton green;
    private javax.swing.JButton iniciart2;
    private javax.swing.JButton red;
    private javax.swing.JButton yellow;
    // End of variables declaration//GEN-END:variables
}
